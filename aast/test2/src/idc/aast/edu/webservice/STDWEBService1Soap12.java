

package idc.aast.edu.webservice;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.1.1.0
//
// Created by Quasar Development at 04-12-2014
//
//---------------------------------------------------




import org.ksoap2.HeaderProperty;
import org.ksoap2.serialization.*;
import org.ksoap2.transport.*;
import org.kxml2.kdom.Element;

import java.lang.reflect.Constructor;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


public class STDWEBService1Soap12
{
    interface STDWEBIWcfMethod
    {
        STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope() throws java.lang.Exception;

        java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope envelope,java.lang.Object result) throws java.lang.Exception;
    }

    String url="https://aastmtic.aast.edu/notification/service1.asmx";

    int timeOut=60000;
    public List< HeaderProperty> httpHeaders;
    public boolean enableLogging;

    STDWEBIServiceEvents callback;
    public STDWEBService1Soap12(){}

    public STDWEBService1Soap12 (STDWEBIServiceEvents callback)
    {
        this.callback = callback;
    }
    public STDWEBService1Soap12(STDWEBIServiceEvents callback,String url)
    {
        this.callback = callback;
        this.url = url;
    }

    public STDWEBService1Soap12(STDWEBIServiceEvents callback,String url,int timeOut)
    {
        this.callback = callback;
        this.url = url;
        this.timeOut=timeOut;
    }

    protected org.ksoap2.transport.Transport createTransport()
    {
        try
        {
            java.net.URI uri = new java.net.URI(url);
            if(uri.getScheme().equalsIgnoreCase("https"))
            {
                return new HttpsTransportSE(uri.getHost(), uri.getPort(), uri.getPath(), timeOut);
            }
            else
            {
                return new HttpTransportSE(url,timeOut);
            }

        }
        catch (java.net.URISyntaxException e)
        {
        }
        return null;
    }
    
    protected STDWEBExtendedSoapSerializationEnvelope createEnvelope()
    {
        STDWEBExtendedSoapSerializationEnvelope envelope= new STDWEBExtendedSoapSerializationEnvelope(STDWEBExtendedSoapSerializationEnvelope.VER12);
        return envelope;
    }
    
    protected java.util.List sendRequest(String methodName,STDWEBExtendedSoapSerializationEnvelope envelope,org.ksoap2.transport.Transport transport  )throws java.lang.Exception
    {
        return transport.call(methodName, envelope, httpHeaders);
    }

    java.lang.Object getResult(java.lang.Class destObj,java.lang.Object source,String resultName,STDWEBExtendedSoapSerializationEnvelope __envelope) throws java.lang.Exception
    {
        if(source instanceof SoapPrimitive)
        {
            SoapPrimitive soap =(SoapPrimitive)source;
            if(soap.getName().equals(resultName))
            {
                java.lang.Object instance=__envelope.get(source,destObj);
                return instance;
            }
        }
        else
        {
            SoapObject soap = (SoapObject)source;
            if (soap.hasProperty(resultName))
            {
                java.lang.Object j=soap.getProperty(resultName);
                if(j==null)
                {
                    return null;
                }
                java.lang.Object instance=__envelope.get(j,destObj);
                return instance;
            }
            else if( soap.getName().equals(resultName)) {
                java.lang.Object instance=__envelope.get(source,destObj);
                return instance;
            }
       }

       return null;
    }

        
    public void launch( ) throws java.lang.Exception
    {
        execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "launch");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return null;
            }
        },"http://tempuri.org/launch");
    }
    
    public android.os.AsyncTask launchAsync()
    {
        return executeAsync(new STDWEBFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                launch( );
                return null;
            }
        }) ;
    }
    
    public String get_latest_notifcations(final String user_name,final String user_type,final String serial ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "get_latest_notifcations");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="user_name";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(user_name!=null?user_name:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="user_type";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(user_type!=null?user_type:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="serial";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(serial!=null?serial:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("get_latest_notifcationsResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/get_latest_notifcations");
    }
    
    public android.os.AsyncTask get_latest_notifcationsAsync(final String user_name,final String user_type,final String serial)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return get_latest_notifcations( user_name,user_type,serial);
            }
        });
    }
    
    public void stop( ) throws java.lang.Exception
    {
        execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "stop");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return null;
            }
        },"http://tempuri.org/stop");
    }
    
    public android.os.AsyncTask stopAsync()
    {
        return executeAsync(new STDWEBFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                stop( );
                return null;
            }
        }) ;
    }
    
    public void lget_views( ) throws java.lang.Exception
    {
        execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "lget_views");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return null;
            }
        },"http://tempuri.org/lget_views");
    }
    
    public android.os.AsyncTask lget_viewsAsync()
    {
        return executeAsync(new STDWEBFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                lget_views( );
                return null;
            }
        }) ;
    }
    
    public String sendNotification(final String UserName,final String message,final String link,final String sender,final String serial,final String sys_code,final String sys_name ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "sendNotification");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="UserName";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(UserName!=null?UserName:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="message";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(message!=null?message:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="link";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(link!=null?link:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="sender";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(sender!=null?sender:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="serial";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(serial!=null?serial:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="sys_code";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(sys_code!=null?sys_code:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="sys_name";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(sys_name!=null?sys_name:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("sendNotificationResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/sendNotification");
    }
    
    public android.os.AsyncTask sendNotificationAsync(final String UserName,final String message,final String link,final String sender,final String serial,final String sys_code,final String sys_name)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return sendNotification( UserName,message,link,sender,serial,sys_code,sys_name);
            }
        });
    }
    
    public void remove(final String serial,final String user_name,final String type ) throws java.lang.Exception
    {
        execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "remove");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="serial";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(serial!=null?serial:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="user_name";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(user_name!=null?user_name:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="type";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(type!=null?type:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return null;
            }
        },"http://tempuri.org/remove");
    }
    
    public android.os.AsyncTask removeAsync(final String serial,final String user_name,final String type)
    {
        return executeAsync(new STDWEBFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                remove( serial,user_name,type);
                return null;
            }
        }) ;
    }
    
    public String check_launch( ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "check_launch");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("check_launchResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/check_launch");
    }
    
    public android.os.AsyncTask check_launchAsync()
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return check_launch( );
            }
        });
    }
    
    public String get_student_scheduele(final String user_name ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "get_student_scheduele");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="user_name";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(user_name!=null?user_name:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("get_student_schedueleResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/get_student_scheduele");
    }
    
    public android.os.AsyncTask get_student_schedueleAsync(final String user_name)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return get_student_scheduele( user_name);
            }
        });
    }
    
    public String get_CourseMap(final String user_name ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "get_CourseMap");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="user_name";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(user_name!=null?user_name:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("get_CourseMapResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/get_CourseMap");
    }
    
    public android.os.AsyncTask get_CourseMapAsync(final String user_name)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return get_CourseMap( user_name);
            }
        });
    }
    
    public String get_student_Info(final String user_name ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "get_student_Info");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="user_name";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(user_name!=null?user_name:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("get_student_InfoResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/get_student_Info");
    }
    
    public android.os.AsyncTask get_student_InfoAsync(final String user_name)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return get_student_Info( user_name);
            }
        });
    }
    
    public String get_student_result(final String user_name,final String check ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "get_student_result");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="user_name";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(user_name!=null?user_name:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="check";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(check!=null?check:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("get_student_resultResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/get_student_result");
    }
    
    public android.os.AsyncTask get_student_resultAsync(final String user_name,final String check)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return get_student_result( user_name,check);
            }
        });
    }
    
    public void markAsread(final String serial,final String user_name,final String type ) throws java.lang.Exception
    {
        execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "markAsread");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="serial";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(serial!=null?serial:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="user_name";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(user_name!=null?user_name:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="type";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(type!=null?type:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return null;
            }
        },"http://tempuri.org/markAsread");
    }
    
    public android.os.AsyncTask markAsreadAsync(final String serial,final String user_name,final String type)
    {
        return executeAsync(new STDWEBFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                markAsread( serial,user_name,type);
                return null;
            }
        }) ;
    }
    
    public void markAsUnRead(final String serial,final String user_name,final String type ) throws java.lang.Exception
    {
        execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "markAsUnRead");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="serial";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(serial!=null?serial:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="user_name";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(user_name!=null?user_name:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="type";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(type!=null?type:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return null;
            }
        },"http://tempuri.org/markAsUnRead");
    }
    
    public android.os.AsyncTask markAsUnReadAsync(final String serial,final String user_name,final String type)
    {
        return executeAsync(new STDWEBFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                markAsUnRead( serial,user_name,type);
                return null;
            }
        }) ;
    }
    
    public String getall(final String empid,final String type ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "getall");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="empid";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(empid!=null?empid:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="type";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(type!=null?type:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getallResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/getall");
    }
    
    public android.os.AsyncTask getallAsync(final String empid,final String type)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getall( empid,type);
            }
        });
    }
    
    public String get_news(final String last_date ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "get_news");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="last_date";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(last_date!=null?last_date:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("get_newsResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/get_news");
    }
    
    public android.os.AsyncTask get_newsAsync(final String last_date)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return get_news( last_date);
            }
        });
    }
    
    public String auth(final String UserName,final String pass ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "auth");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="UserName";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(UserName!=null?UserName:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="pass";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(pass!=null?pass:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("authResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/auth");
    }
    
    public android.os.AsyncTask authAsync(final String UserName,final String pass)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return auth( UserName,pass);
            }
        });
    }
    
    public String CheckVersion(final String versionNum ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "CheckVersion");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="versionNum";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(versionNum!=null?versionNum:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("CheckVersionResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/CheckVersion");
    }
    
    public android.os.AsyncTask CheckVersionAsync(final String versionNum)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return CheckVersion( versionNum);
            }
        });
    }
    
    public String SetVersion(final String versionNum,final String versionLink ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "SetVersion");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="versionNum";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(versionNum!=null?versionNum:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="versionLink";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(versionLink!=null?versionLink:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("SetVersionResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/SetVersion");
    }
    
    public android.os.AsyncTask SetVersionAsync(final String versionNum,final String versionLink)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return SetVersion( versionNum,versionLink);
            }
        });
    }
    
    public String get_df_links(final String empid ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "get_df_links");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="empid";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(empid!=null?empid:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("get_df_linksResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/get_df_links");
    }
    
    public android.os.AsyncTask get_df_linksAsync(final String empid)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return get_df_links( empid);
            }
        });
    }
    
    public String getlinks(final String empid,final String type ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "getlinks");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="empid";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(empid!=null?empid:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="type";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(type!=null?type:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getlinksResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/getlinks");
    }
    
    public android.os.AsyncTask getlinksAsync(final String empid,final String type)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getlinks( empid,type);
            }
        });
    }
    
    public String getcounts(final String empid ) throws java.lang.Exception
    {
        return (String)execute(new STDWEBIWcfMethod()
        {
            @Override
            public STDWEBExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              STDWEBExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "getcounts");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="empid";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(empid!=null?empid:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(STDWEBExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getcountsResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/getcounts");
    }
    
    public android.os.AsyncTask getcountsAsync(final String empid)
    {
        return executeAsync(new STDWEBFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getcounts( empid);
            }
        });
    }

    
    protected java.lang.Object execute(STDWEBIWcfMethod wcfMethod,String methodName) throws java.lang.Exception
    {
        org.ksoap2.transport.Transport __httpTransport=createTransport();
        __httpTransport.debug=enableLogging;
        STDWEBExtendedSoapSerializationEnvelope __envelope=wcfMethod.CreateSoapEnvelope();
        try
        {
            sendRequest(methodName, __envelope, __httpTransport);
            
        }
        finally {
            if (__httpTransport.debug) {
                if (__httpTransport.requestDump != null) {
                    android.util.Log.i("requestDump",__httpTransport.requestDump);
                }
                if (__httpTransport.responseDump != null) {
                    android.util.Log.i("responseDump",__httpTransport.responseDump);
                }
            }
        }
        java.lang.Object __retObj = __envelope.bodyIn;
        if (__retObj instanceof org.ksoap2.SoapFault){
            org.ksoap2.SoapFault __fault = (org.ksoap2.SoapFault)__retObj;
            throw convertToException(__fault,__envelope);
        }else{
            return wcfMethod.ProcessResult(__envelope,__retObj);
        }
    }
    
    protected < T> android.os.AsyncTask  executeAsync(final STDWEBFunctions.IFunc< T> func)
    {
        return new android.os.AsyncTask< Void, Void, STDWEBOperationResult< T>>()
        {
            @Override
            protected void onPreExecute() {
                callback.Starting();
            };
            @Override
            protected STDWEBOperationResult< T> doInBackground(Void... params) {
                STDWEBOperationResult< T> result = new STDWEBOperationResult< T>();
                try
                {
                    result.Result= func.Func();
                }
                catch(java.lang.Exception ex)
                {
                    ex.printStackTrace();
                    result.Exception=ex;
                }
                return result;
            }
            
            @Override
            protected void onPostExecute(STDWEBOperationResult< T> result)
            {
                callback.Completed(result);
            }
        }.execute();
    }
        

    java.lang.Exception convertToException(org.ksoap2.SoapFault fault,STDWEBExtendedSoapSerializationEnvelope envelope)
    {
        return new java.lang.Exception(fault.faultstring);
    }
}


